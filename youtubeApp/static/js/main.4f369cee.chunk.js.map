{"version":3,"sources":["components/Form/Form.module.css","components/Slider/Slider.module.css","components/Box/Box.module.css","components/store/actions.js","components/Form/index.js","components/Form/Form.js","components/Box/index.js","components/Box/Box.js","components/Slider/index.js","components/Slider/Slider.js","components/BoxContainer/index.js","components/BoxContainer/Boxcontainer.js","App.js","serviceWorker.js","components/store/reducer.js","components/store/middleware.js","components/store/rootMiddleware.js","components/store/index.js","index.js","components/BoxContainer/BoxContainer.module.css"],"names":["module","exports","getInfo","payload","type","Form","dispatch","useDispatch","inputValue","useSelector","state","className","styles","FormContainer","value","autoFocus","Input","onChange","event","target","Button","onClick","preventDefault","Box","props","useState","data","setData","newData","videosId","index","children","undefined","back","boxy","statistics","viewCount","likeCount","dislikeCount","commentCount","href","openButton","Slider","pageArr","buttonContainer","map","element","changePageData","newDataFetch","button","key","BoxContainer","currentPageData","commonContainer","boxContainer","length","image","src","snippet","thumbnails","medium","url","alt","title","channelTitle","slider","App","Boolean","window","location","hostname","match","initialState","currentPage","pageAmount","pageToken","loading","dataForId","rootMiddleware","composeWithDevTools","applyMiddleware","store","next","action","getState","fetch","then","res","json","items","code","nextPageToken","createStore","id","videoId","slice","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f369cee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"Form_FormContainer__3S8eS\",\"Input\":\"Form_Input__1wiyf\",\"Button\":\"Form_Button__3kCya\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"Slider_buttonContainer__3wQjb\",\"button\":\"Slider_button__3wf65\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"Box_Box__2P2d7\",\"boxy\":\"Box_boxy__h9vKJ\",\"back\":\"Box_back__1h4ov\",\"openButton\":\"Box_openButton__3YEJG\"};","export const GET_INPUTVALUE = 'GET_INPUTVALUE'\r\nexport const GET_API = 'GET_API'\r\nexport const GET_USERS = 'GET_USERS'\r\nexport const GET_INFO = 'GET_INFO'\r\nexport const SET_NEW_DATA = 'SET_NEW_DATA'\r\nexport const CHANGE_PAGE = 'CHANGE_PAGE'\r\nexport const CHANGE_PAGE_DATA = 'CHANGE_PAGE_DATA'\r\nexport const NEW_DATA_FETCH = 'NEW_DATA_FETCH'\r\n\r\nexport function getInputvalue(payload){\r\n    return{\r\n        type: GET_INPUTVALUE,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function getApi(payload){\r\n    return{\r\n        type: GET_API,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function getUsers(payload){\r\n    return{\r\n        type: GET_USERS,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function getInfo(payload){\r\n    return{\r\n        type: GET_INFO,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function setNewData(payload){\r\n    return{\r\n        type: SET_NEW_DATA,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function changePage(payload){\r\n    return{\r\n        type: CHANGE_PAGE,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function changePageData(payload){\r\n    return{\r\n        type: CHANGE_PAGE_DATA,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function newDataFetch(payload){\r\n    return{\r\n        type: NEW_DATA_FETCH,\r\n        payload: payload\r\n    }\r\n}","import Form from './Form'\r\nexport default Form","import React from 'react';\r\nimport { getInputvalue, getUsers } from '../store/actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styles from './Form.module.css'\r\n\r\n\r\nexport default function Form(){\r\n\r\n    const dispatch = useDispatch()\r\n    const inputValue = useSelector(state => state.inputValue)\r\n    \r\n    function changeInputvalue(event){\r\n        dispatch(getInputvalue(event.target.value))\r\n    }\r\n    \r\n    function clickButton(event){\r\n        event.preventDefault();\r\n        dispatch(getUsers())\r\n    }\r\n\r\n    return(\r\n        <form className = {styles.FormContainer}>\r\n            <input value = {inputValue} autoFocus className = {styles.Input} onChange = {changeInputvalue}></input>\r\n            <button className = {styles.Button} onClick = {clickButton}>Search</button>\r\n        </form>\r\n    )\r\n}","import Box from './Box'\r\nexport default Box","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getInfo } from '../store/actions'\r\nimport styles from './Box.module.css'\r\n\r\nexport default function Box(props){\r\n    const [data, setData] = useState(false)\r\n    const newData = useSelector(state => state.newData)\r\n    const dispatch = useDispatch()\r\n    const videosId = useSelector(state=>state.videosId[0][props.index])\r\n    \r\n    function abc (props){\r\n        dispatch(getInfo(props.index))\r\n        setData(!data)\r\n    }\r\n\r\n    function abcc(){\r\n        setData(!data)\r\n    }\r\n\r\n    return(\r\n    <div className = {styles.Box}>\r\n        {data === false? props.children : \r\n         newData[props.index] === undefined? '':\r\n            <div className = {styles.back}>\r\n                <div className = {styles.boxy}>views:{newData[props.index].statistics.viewCount}</div>\r\n                <div className = {styles.boxy}>likes:{newData[props.index].statistics.likeCount}</div>\r\n                <div className = {styles.boxy}>dislikes:{newData[props.index].statistics.dislikeCount}</div>\r\n                <div className = {styles.boxy}>comments:{newData[props.index].statistics.commentCount}</div>\r\n                <a className = {styles.boxy} href = {`https://www.youtube.com/watch?v=${videosId}/`}>Watch!</a>\r\n            </div>\r\n        }\r\n        <span className = {styles.openButton} onClick = {data === false ? abc: abcc}>{data === false? `description`: 'back'}</span>\r\n    </div>\r\n    )\r\n}","import Slider from './Slider'\r\nexport default Slider","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport styles from './Slider.module.css'\r\nimport { changePage, changePageData, newDataFetch } from '../store/actions'\r\n\r\n\r\n\r\nexport default function Slider(props){\r\n\r\n    const pageArr = useSelector(state => state.pageArr)\r\n    const dispatch = useDispatch()\r\n    \r\n    return(\r\n        <div className = {styles.buttonContainer}>\r\n            {pageArr.map((element, index) => <div index = {index} onClick = {() => {\r\n                dispatch(changePage(index))\r\n                dispatch(changePageData())\r\n                dispatch(newDataFetch())\r\n                }\r\n            }\r\n            className = {styles.button} key = {index}>{index + 1}</div>)}\r\n        </div>\r\n    )\r\n}","import BoxContainer from './Boxcontainer'\r\nexport default BoxContainer","import React from 'react'\r\nimport Box from '../Box'\r\nimport Slider from '../Slider'\r\nimport styles from './BoxContainer.module.css'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function BoxContainer(){\r\n\r\n    const data = useSelector(state => state.data)\r\n    const currentPageData = useSelector(state => state.currentPageData)\r\n\r\n    return (\r\n        <div className = {styles.commonContainer}>\r\n            <div className = {styles.boxContainer}>\r\n             {data.length === 0? '': currentPageData.map((element, index) =>\r\n                    <Box index = {index} key = {index}>\r\n                        <img className = {styles.image} src = {element.snippet.thumbnails.medium.url} alt = ''></img>\r\n                        <p className = {styles.boxy}>{element.snippet.title}</p>\r\n                        <p className = {styles.boxy}>{element.snippet.channelTitle}</p>\r\n                    </Box>)}\r\n            </div>\r\n            <div className = {styles.slider}>{data.length === 0? '':<Slider></Slider>}</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport Form from './components/Form'\nimport BoxContainer from './components/BoxContainer'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Form />\n      <BoxContainer />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {GET_INPUTVALUE, GET_API, GET_USERS, GET_INFO, SET_NEW_DATA, CHANGE_PAGE, CHANGE_PAGE_DATA, NEW_DATA_FETCH} from './actions'\r\n\r\nconst initialState = {\r\n    data: [],\r\n    inputValue: '',\r\n    currentPage: 0, \r\n    videosId: [],\r\n    newData: [],\r\n    pageAmount: [],\r\n    pageArr: [],\r\n    currentPageData: [],\r\n    pageToken: '',\r\n    loading: false,\r\n    dataForId: []\r\n}\r\n\r\nexport function dataReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n\r\n        case GET_USERS: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n\r\n        case GET_INPUTVALUE: {\r\n            return {\r\n                ...state,\r\n                inputValue: action.payload\r\n            }\r\n        }\r\n\r\n        case GET_API: {\r\n            return{\r\n                ...state,\r\n                data: [...state.data, ...[...action.payload.items]],\r\n                dataForId: action.payload.items,\r\n                pageToken: action.payload.code,\r\n                loading: false,\r\n            }\r\n        }\r\n\r\n        case GET_INFO:{\r\n            return{\r\n                ...state,\r\n                videosId: [state.dataForId.map(element => element.id.videoId)],\r\n                pageAmount: state.data.length/5 ,\r\n                currentPageData: state.data.slice(state.currentPage*5, state.currentPage*5 + 5),\r\n            }\r\n        }\r\n\r\n        case SET_NEW_DATA: {\r\n            return{\r\n                ...state,\r\n                newData: [...state.newData, ...action.payload],\r\n                pageArr: state.data.slice(0, state.pageAmount),\r\n                \r\n            }\r\n        }\r\n\r\n        case CHANGE_PAGE: {\r\n            return{\r\n                ...state,\r\n                currentPage: action.payload ,\r\n            }\r\n        }\r\n\r\n        case CHANGE_PAGE_DATA: {\r\n            return{\r\n                ...state,\r\n                currentPageData: state.data.slice(state.currentPage*5, state.currentPage*5 + 5),\r\n                loading: true\r\n            }\r\n        }\r\n\r\n        case NEW_DATA_FETCH: {\r\n            return{\r\n                ...state,\r\n            }\r\n        }\r\n\r\n        default: return state\r\n    }\r\n\r\n}","import {getApi, GET_USERS, GET_INFO, getInfo, setNewData, NEW_DATA_FETCH } from './actions'\r\n\r\nexport const usersMiddleware = store => next => action => {\r\n\r\n    const { loading, currentPage } = store.getState()\r\n\r\n    if(action.type === GET_USERS || (action.type === NEW_DATA_FETCH && loading && currentPage %(2 || 5)  === 0) ) {\r\n        const { pageToken, inputValue } = store.getState()\r\n\r\n        fetch(`https://www.googleapis.com/youtube/v3/search?key=AIzaSyAtRbAupFzVgD0LI9ikzBVi0Px3W6lBTGA&type=video&part=snippet&maxResults=15&q=${inputValue}&pageToken=${pageToken}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            store.dispatch(getApi({items: data.items, code: data.nextPageToken}))\r\n            store.dispatch(getInfo())\r\n        })\r\n    }\r\n\r\n    if(action.type === GET_INFO){\r\n        const { videosId } = store.getState()\r\n        fetch(`https://www.googleapis.com/youtube/v3/videos?key=AIzaSyAtRbAupFzVgD0LI9ikzBVi0Px3W6lBTGA&id=${videosId}&part=snippet,statistics`)\r\n        .then(res => res.json())\r\n        .then(newData =>{\r\n            store.dispatch(setNewData(newData.items))\r\n        })\r\n    }\r\n\r\n    next(action)\r\n}\r\n","import { applyMiddleware } from 'redux'\r\nimport { usersMiddleware } from './middleware'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nexport const rootMiddleware = composeWithDevTools(applyMiddleware(usersMiddleware))","import { createStore } from 'redux'\r\nimport { dataReducer } from './reducer'\r\nimport { rootMiddleware } from './rootMiddleware'\r\n\r\nexport const store = createStore(dataReducer, rootMiddleware)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { store } from './components/store'\n\nReactDOM.render(<Provider store = {store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxContainer\":\"BoxContainer_boxContainer__1JiJu\",\"boxy\":\"BoxContainer_boxy__1waol\",\"slider\":\"BoxContainer_slider__1tG0W\"};"],"sourceRoot":""}